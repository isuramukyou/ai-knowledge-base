services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ai_knowledge_postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai_knowledge_network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ai_knowledge_redis
    volumes:
      - redis_data:/data
    networks:
      - ai_knowledge_network
    restart: unless-stopped
    command: [ "--requirepass", "${REDIS_PASSWORD}" ]


  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_knowledge_app
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - ADMIN_TELEGRAM_ID=${ADMIN_TELEGRAM_ID}
      - S3_REGION=${S3_REGION}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_PUBLIC_ENDPOINT=${S3_PUBLIC_ENDPOINT}
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - ai_knowledge_network
    restart: unless-stopped
    env_file:
      - .env

  # Telegram Bot
  telegram-bot:
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile
    container_name: ai_knowledge_telegram_bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_MINI_APP_URL=${TELEGRAM_MINI_APP_URL}
      - TELEGRAM_CHAT_URL=${TELEGRAM_CHAT_URL}
      - API_URL=http://app:3000
    depends_on:
      - app
    networks:
      - ai_knowledge_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  ai_knowledge_network:
    driver: bridge
